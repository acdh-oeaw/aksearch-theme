<?php
//header("Content-Type: text/plain");

// TODO: fold this logic into record driver methods at some point:
$marc = $this->driver->tryMethod('getMarcRecord');

/*var_dump($this->driver);
exit;*/
if (is_object($marc)) {
    $marcPhdField = $marc->getField('502');
    $marcProceedingsField = $marc->getFields('[17]11', true);
} else {
    $marcPhdField = $marcProceedingsField = false;
}
$journalTitle = $this->driver->tryMethod('getContainerTitle');
$formats = $this->driver->tryMethod('getFormats');
$bibLevel = $this->driver->tryMethod('getBibliographicLevel');

// Initialize format variable
$format = null;

// Get the format
if (in_array('DVD', $formats)) {
    $format = 'MPCT';
} else if (in_array('SoundCarrier', $formats) || in_array('SoundDisc', $formats)) {
    $format = 'SOUND';
} else if (in_array('FilmForProjection', $formats)) {
    $format = 'VIDEO';
} else if (in_array('MapCard', $formats)) {
    $format = 'MAP';
} else if (in_array('CDROM', $formats)) {
    $format = 'DATA';
} else if (in_array('EBook', $formats)) {
    $format = 'EBOOK';
} else if (!empty($marcProceedingsField)) {
    $format = 'CONF';
} else if ($marcPhdField) {
    $format = 'THES';
} else if (in_array('Printed', $formats)) {
    $format = 'BOOK'; // Default
    if ($bibLevel != null) {
        switch ($bibLevel) {
            case 'Serial':
            case 'MultiVolume':
                if (in_array('Journal', $formats)) {
                    $format = 'JFULL';
                } else if (in_array('Newspaper', $formats)) {
                    $format = 'NEWS';
                } else {
                    $format = 'SER';
                }
                break;
            case 'DependentLiterature':
                $format = 'JOUR';
                break;
        }
    }
} else if (in_array('Online', $formats)) {
    $format = 'EJOUR'; // Default
    if ($bibLevel != null) {
        switch ($bibLevel) {
            case 'DependentLiterature':
                if (in_array('Chapter', $formats) || in_array('Essay', $formats)) {
                    $format = 'ECHAP';
                }
                break;
            case 'Monographic':
            case 'MultiVolume':
                $format = 'EBOOK';
                break;
            case 'Serial':
                if (in_array('Journal', $formats)) {
                    $format = 'JFULL';
                }
                break;
        }
    }
} else {
    // Fallback value "GEN" for "generic"
    $format = 'GEN';
}

// Type
echo 'TY  - ' . $format . "\r\n";

$title = rtrim($this->driver->getWholeTitle(), " /");
if (!empty($title)) {
    echo 'TI  - ' . "$title\r\n";
}

if ($format == 'JOUR' || $format == 'EJOUR') {
    if (empty($title)) {
        echo 'TI  - ' . "$journalTitle\r\n";
    } else {
        echo 'T2  - ' . "$journalTitle\r\n";
    }
    $volume = $this->driver->tryMethod('getContainerVolume');
    if (!empty($volume)) {
        echo 'VL  - ' . "$volume\r\n";
    }
    $number = $this->driver->tryMethod('getContainerIssue');
    if (!empty($number)) {
        echo 'IS  - ' . "$number\r\n";
    }
    $start = $this->driver->tryMethod('getContainerStartPage');
    $end = $this->driver->tryMethod('getContainerEndPage');
    if (!empty($start)) {
        // use page range if possible
        if (!empty($end)) {
            echo 'EP  - ' . "$end\r\n";
        } else {
            // use only start page
            echo 'SP  - ' . "$start\r\n";
        }
    }
}

$series = $this->driver->tryMethod('getSeries');
if (is_array($series)) {
    foreach ($series as $current) {
        echo 'T3  - ' . (is_array($current) ? $current['name'] : $current) . "\r\n";
    }
}

$author = $this->driver->tryMethod('getPrimaryAuthor');
if (!empty($author)) {
    echo 'AU  - ' . "$author\r\n";
}

$secondaryAuthors = $this->driver->tryMethod('getSecondaryAuthors');
if (is_array($secondaryAuthors)) {
    foreach ($secondaryAuthors as $current) {
        echo 'A2  - ' . "$current\r\n";
    }
}

$pubPlaces = $this->driver->tryMethod('getPlacesOfPublication');
$pubDates = $this->driver->tryMethod('getPublicationDates');
$pubNames = $this->driver->tryMethod('getPublishers');
if (is_array($pubPlaces) && is_array($pubDates) && is_array($pubNames)) {
    $total = min(count($pubPlaces), count($pubDates), count($pubNames));
    // if we have pub dates but no other details, we still want to export the year:
    if ($total == 0 && count($pubDates) > 0) {
        $total = 1;
    }
    for ($i = 0; $i < $total; $i++) {
        if (isset($pubPlaces[$i])) {
            echo "CY  - " . rtrim(str_replace(['[', ']'], '', $pubPlaces[$i]), ': ') . "\r\n";
        }
        if (isset($pubNames[$i])) {
            echo "PB  - " . rtrim($pubNames[$i], ", ") . "\r\n";
        }
        $date = trim($pubDates[$i], '[]. ');
        if (strlen($date) > 4) {
            $date = $this->dateTime()->extractYear($date);
        }
        if ($date) {
            echo 'PY  - ' . "$date\r\n";
        }
    }
}

$languages = $this->driver->tryMethod('getLanguages');
if (is_array($languages)) {
    foreach ($languages as $lang) {
        echo 'LA  - ' . "$lang\r\n";
    }
}

$genres = $this->driver->tryMethod('getGenres');
if (is_array($genres)) {
    foreach ($genres as $genre) {
        echo 'M3  - ' . "$genre\r\n";
    }
}

$topics = $this->driver->tryMethod('getTopics');
if (is_array($topics)) {
    foreach ($topics as $topic) {
        echo 'KW  - ' . "$topic\r\n";
    }
}

$start_page = $this->driver->tryMethod('getContainerStartPage');
if (!empty($start_page)) {
    echo 'SP  - ' . "$start_page\r\n";
}

$isbns = $this->driver->tryMethod('getISBNs');
if (is_array($isbns)) {
    foreach ($isbns as $isbn) {
        echo 'SN  - ' . "$isbn\r\n";
    }
}

$issns = $this->driver->tryMethod('getISSNs');
if (is_array($issns)) {
    foreach ($issns as $issn) {
        echo 'SN  - ' . "$issn\r\n";
    }
}

$edition = $this->driver->tryMethod('getEdition');
if (!empty($edition)) {
    echo 'ET  - ' . "$edition\r\n";
}

$notes = $this->driver->tryMethod('getGeneralNotes');
if (is_array($notes)) {
    foreach ($notes as $note) {
        echo 'N1  - ' . "$note\r\n";
    }
}

foreach ($this->record($this->driver)->getUrlList() as $url) {
    echo 'UR  - ' . "$url\r\n";
}

// End of Record:
echo "ER  -\r\n\r\n";
?>
